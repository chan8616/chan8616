# Lint the codebase using pre-commit
name: Lint

on:
  pull_request:
    branches: [main, dev]
  push:
    branches: [main, dev]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository to access its content
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Python 3.10
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: 3.10.11

      # Install pre-commit
      - name: Install pre-commit
        run: python -m pip install pre-commit
        shell: bash

      # Update pre-commit hooks
      - name: Update pre-commit hooks
        run: pre-commit autoupdate

      # Verify installation
      - name: Verify pip packages
        run: python -m pip freeze --local
        shell: bash

      # Cache pre-commit environments
      - name: Cache pre-commit environments
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-3|${{ runner.os }}|${{ hashFiles('.pre-commit-config.yaml') }}

      # Run pre-commit
      - name: Run pre-commit
        run: pre-commit run --show-diff-on-failure --color=always --all-files
        shell: bash
        continue-on-error: true
        env:
          SKIP: no-commit-to-branch
          
      # Upload pre-commit log as artifact if pre-commit fails
      - name: Upload pre-commit log as artifact
        if: failure()  # pre-commit 실행이 실패했을 때만 실행
        uses: actions/upload-artifact@v3
        with:
          name: pre-commit-log
          path: /home/runner/.cache/pre-commit/pre-commit.log
